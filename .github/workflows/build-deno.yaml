name: Compile Deno

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: true

jobs:
  metadata:
    name: Get Release Upload Metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_upload.outputs.version }}
      upload_url: ${{ steps.get_upload.outputs.upload_url }}
      prerelease: ${{ steps.get_upload.outputs.prerelease }}
    steps:
      - id: get_upload
        run: |
          export VERSION="${{ github.event.inputs.version || github.ref }}"
          VERSION="${VERSION#refs/tags/}"
          response=$(curl -s -H "Accept: application/json" https://api.github.com/repos/lukechannings/deno-arm64/releases)
          release=$(echo $response | jq ".[]|select(.tag_name==\"${VERSION}\")")

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "upload_url=$(echo $release | jq -r ".upload_url")" >> $GITHUB_OUTPUT
          echo "prerelease=$(echo $release | jq -r ".prerelease")" >> $GITHUB_OUTPUT
  build-docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: [ metadata ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: VERSION=${{ needs.metadata.outputs.version }}
          tags: |
            lukechannings/deno:${{ needs.metadata.outputs.version }}
            lukechannings/deno:latest
